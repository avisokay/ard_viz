rep("tomato", 3),
rep("gold", 4)),
color.border = "black",
color.highlight.background = "green",
color.highlight.border = "black",
shadow = TRUE
# title = paste0("</b>Node </p>", 1:10)
)
edge = data.frame(from = c(1, 1, 2, 3, 4, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10),
to = c(2, 3, 3, 5, 5, 6, 6, 7, 8, 9, 10, 10, 1, 7, 3)
)
#app
ui = fluidPage(
# Generate Title Panel at the top of the app
titlePanel("How Many Do You Know In Each Group?"),
fluidRow(
column(width = 6,
DTOutput('tbl')),
column(width = 6,
visNetworkOutput("network")) #note that column widths in a fluidRow should sum to 12
),
fluidRow(column(width = 6),
column(width=6, "Click and hold nodes for a second to select additional nodes.")
)
) #end of fluidPage
server = function (input, output, session){
output$network = renderVisNetwork({
visNetwork(nodes = node,edge) %>%
visOptions(highlightNearest=TRUE,
nodesIdSelection = TRUE) %>%
#allow for long click to select additional nodes
visInteraction(multiselect = TRUE) %>%
visIgraphLayout() %>%
#Use visEvents to turn set input$current_node_selection to list of selected nodes
visEvents(select = "function(nodes) {
Shiny.onInputChange('current_node_selection', nodes.nodes);
;}")
})
#render data table restricted to selected nodes
output$tbl = renderDT(
edge %>%
filter((to %in% input$current_node_selection)|(from %in% input$current_node_selection)),
options = list(lengthChange = FALSE)
)
}
shinyApp(ui, server)
View(server)
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
ARD
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)))
colnames(ARD) = c("Node", "Grey", "Red", "Gold")
ARD
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
input$current_node_selection
runApp('viz_shiny.R')
runApp('viz_shiny.R')
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)),
index = FALSE)
colnames(ARD) = c("Node", "Grey", "Red", "Gold")
ARD
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3))
colnames(ARD) = c("Node", "Grey", "Red", "Gold")
shinyApp(ui, server)
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)),
index = FALSE)
colnames(ARD) = c("Node", "Grey", "Red", "Gold")
ARD
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)),
row.names = FALSE)
colnames(ARD) = c("Node", "Grey", "Red", "Gold")
ARD
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)),
row.names = FALSE)
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)),
row.names = 1)
colnames(ARD) = c("Node", "Grey", "Red", "Gold")
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)),
row.names = 1)
colnames(ARD) = c("Grey", "Red", "Gold")
ARD
ARD = data.frame(rbind(c("Node 1", 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)),
row.names = 1)
colnames(ARD) = c("Grey", "Red", "Gold")
ARD
ARD = data.frame(rbind(c("Node 1", 2, 0, 1),
c("Node 2", 2, 0, 0),
c("Node 3", 2, 1, 1),
c("Node 4", 0, 2, 0),
c("Node 5", 1, 2, 0),
c("Node 6", 0, 2, 1),
c("Node 7", 0, 1, 2),
c("Node 8", 0, 0, 3),
c("Node 9", 1, 0, 2),
c("Node 10", 0, 1, 3)),
row.names = 1)
colnames(ARD) = c("Grey", "Red", "Gold")
ui <- fluidPage(
# Generate Title Panel at the top of the app
titlePanel("Network Visualization App"),
fluidRow(
column(width = 6,
DTOutput('tbl')),
column(width = 6,
visNetworkOutput("network")) #note that column widths in a fluidRow should sum to 12
),
fluidRow(column(width = 6),
column(width=6, "Click node to see how many they know in each group.")
)
) #end of fluidPage
server <- function (input, output, session){
output$network <- renderVisNetwork({
visNetwork(nodes = node,edge) %>%
visOptions(highlightNearest=TRUE,
nodesIdSelection = TRUE) %>%
#allow for long click to select additional nodes
visInteraction(multiselect = TRUE) %>%
visIgraphLayout() %>%
#Use visEvents to turn set input$current_node_selection to list of selected nodes
visEvents(select = "function(nodes) {
Shiny.onInputChange('current_node_selection', nodes.nodes);
;}")
})
#render data table restricted to selected nodes
output$tbl <- renderDT(
ARD %>%
filter((Grey %in% input$current_node_selection)|(Red %in% input$current_node_selection)|(Gold %in% input$current_node_selection)),
options = list(lengthChange = FALSE)
)
}
shinyApp(ui, server)
runApp('viz_shiny.R')
library(igraph)
library(visNetwork)
library(dplyr)
library(shiny)
library(shinythemes)
library(DT)
#dataset
node = data.frame(id = 1:10,
shape = "circle",
font.size = 30,
align = "center",
label = as.character(1:10),
group = c(rep("Grey", 3),
rep("Red", 3),
rep("Gold", 4)),
borderWidth = 2,
color.background = c(rep("slategrey", 3),
rep("tomato", 3),
rep("gold", 4)),
color.border = "black",
color.highlight.background = "green",
color.highlight.border = "black",
shadow = TRUE
# title = paste0("</b>Node </p>", 1:10)
)
edge = data.frame(from = c(1, 1, 2, 3, 4, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10),
to   = c(2, 3, 3, 5, 5, 6, 6, 7, 8, 9, 10, 10, 1, 7, 3)
)
# ARD = data.frame(rbind(node1knows = c(2, 0, 1),
#                        node2knows = c(2, 0, 0),
#                        node3knows = c(2, 1, 1),
#                        node4knows = c(0, 2, 0),
#                        node5knows = c(1, 2, 0),
#                        node6knows = c(0, 2, 1),
#                        node7knows = c(0, 1, 2),
#                        node8knows = c(0, 0, 3),
#                        node9knows = c(1, 0, 2),
#                        node10knows = c(0, 1, 3)))
# colnames(ARD) = c("Grey", "Red", "Gold")
ARD = data.frame(rbind(c("1", 2, 0, 1),
c("2", 2, 0, 0),
c("3", 2, 1, 1),
c("4", 0, 2, 0),
c("5", 1, 2, 0),
c("6", 0, 2, 1),
c("7", 0, 1, 2),
c("8", 0, 0, 3),
c("9", 1, 0, 2),
c("10", 0, 1, 3)),
row.names = 1)
colnames(ARD) = c("Grey", "Red", "Gold")
#app
ui <- fluidPage(
# Generate Title Panel at the top of the app
titlePanel("Network Visualization App"),
fluidRow(
column(width = 6,
DTOutput('tbl')),
column(width = 6,
visNetworkOutput("network")) #note that column widths in a fluidRow should sum to 12
),
fluidRow(column(width = 6),
column(width=6, "Click node to see how many they know in each group.")
)
) #end of fluidPage
server <- function (input, output, session){
output$network <- renderVisNetwork({
visNetwork(nodes = node,edge) %>%
visOptions(highlightNearest=TRUE,
nodesIdSelection = TRUE) %>%
#allow for long click to select additional nodes
visInteraction(multiselect = TRUE) %>%
visIgraphLayout() %>%
#Use visEvents to turn set input$current_node_selection to list of selected nodes
visEvents(select = "function(nodes) {
Shiny.onInputChange('current_node_selection', nodes.nodes);
;}")
})
#render data table restricted to selected nodes
output$tbl <- renderDT(
ARD %>%
filter((Grey %in% input$current_node_selection)|(Red %in% input$current_node_selection)|(Gold %in% input$current_node_selection)),
options = list(lengthChange = FALSE)
)
}
shinyApp(ui, server)
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
require(shiny)
require(visNetwork)
server <- function(input, output, session) {
#dataset
node = data.frame(id = 1:10,
label = as.character(1:10),
shape = "circle",
font.size = 30,
align = "center",
group = c(rep("Grey", 3),
rep("Red", 3),
rep("Gold", 4)),
borderWidth = 2,
color.background = c(rep("slategrey", 3),
rep("tomato", 3),
rep("gold", 4)),
color.border = "black",
color.highlight.background = "green",
color.highlight.border = "black",
shadow = TRUE
# title = paste0("</b>Node </p>", 1:10)
)
edge = data.frame(from = c(1, 1, 2, 3, 4, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10),
to   = c(2, 3, 3, 5, 5, 6, 6, 7, 8, 9, 10, 10, 1, 7, 3))
output$network_proxy <- renderVisNetwork({
visNetwork(node, edge) %>%
visEvents(select = "function(nodes) {
Shiny.onInputChange('current_node_id', nodes.nodes);
;}")
})
output$nodes_data_from_shiny <- renderDataTable( {
info <- data.frame(node)
info[info$id == input$current_node_id, ]
})
observeEvent(input$current_node_id, {
visNetworkProxy("network_proxy") %>%
visGetNodes()
})
}
ui <- fluidPage(
visNetworkOutput("network_proxy", height = "400px"),
dataTableOutput("nodes_data_from_shiny")
)
shinyApp(ui = ui, server = server)
runApp('viz.R')
runApp('viz.R')
ARD = data.frame(rbind(c("Node 1 Knows", 2, 0, 1),
c("Node 2 Knows", 2, 0, 0),
c("Node 3 Knows", 2, 1, 1),
c("Node 4 Knows", 0, 2, 0),
c("Node 5 Knows", 1, 2, 0),
c("Node 6 Knows", 0, 2, 1),
c("Node 7 Knows", 0, 1, 2),
c("Node 8 Knows", 0, 0, 3),
c("Node 9 Knows", 1, 0, 2),
c("Node 10 Knows", 0, 1, 3)))
colnames(ARD) = c("Node", "Grey", "Red", "Gold")
ARD
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)))
colnames(ARD) = c("Node", "Grey", "Red", "Gold")
ARD
runApp('viz_shiny.R')
runApp('viz_shiny.R')
c(8, 0, 0, 3),
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)))
colnames(ARD) = c("Node", "Grey", "Red", "Gold")
ARD
ARD = data.frame(rbind(c(1, 2, 0, 1),
c(2, 2, 0, 0),
c(3, 2, 1, 1),
c(4, 0, 2, 0),
c(5, 1, 2, 0),
c(6, 0, 2, 1),
c(7, 0, 1, 2),
c(8, 0, 0, 3),
c(9, 1, 0, 2),
c(10, 0, 1, 3)))
colnames(ARD) = c("Node", "Grey", "Red", "Gold")
rownames(ARD) = NULL
ARD
runApp('viz_shiny.R')
runApp('viz.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz_shiny.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz_shiny.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz_shiny.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
runApp('viz.R')
edge = data.frame(from = c(1, 1, 2, 3, 4, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10),
to   = c(2, 3, 3, 5, 5, 6, 6, 7, 8, 9, 10, 10, 1, 7, 3))
runApp('viz_shiny.R')
# https://cengel.github.io/R-data-viz/domains.html#networks-e.g.-visnetwork
# https://holtzy.github.io/Pimp-my-rmd/
# https://bookdown.org/yihui/rmarkdown-cookbook/diagrams.html
# https://kateto.net/network-visualization
library(visNetwork)
library(igraph)
library(r2d3)
library(kableExtra)
# create network and visualize the 3 groups
nodes = data.frame(id = 1:10,
shape = "dot",
label = paste("Node", 1:10),
group = c(rep("A", 3),
rep("B", 3),
rep("C", 4)),
borderWidth = 2,
color.background = c(rep("slategrey", 3),
rep("tomato", 3),
rep("gold", 4)),
color.border = "black",
color.highlight.background = "green",
color.highlight.border = "darkgreen",
title = paste0("</b>Node </p>", 1:10)
)
edges = data.frame(from = c(1, 1, 2, 3, 4, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10),
to =   c(2, 3, 3, 5, 5, 6, 6, 7, 8, 9, 10, 10, 1, 7, 3),
color = "black"
# length = 150
)
visNetwork(nodes, edges, width = "100%") %>%
visOptions(selectedBy = "group")
# ARD matrix
ARD = data.frame(rbind(node1 = c(2, 0, 1),
node2 = c(2, 0, 0),
node3 = c(2, 1, 1),
node4 = c(0, 2, 0),
node5 = c(1, 1, 0),
node6 = c(0, 2, 1),
node7 = c(0, 1, 2),
node8 = c(0, 0, 3),
node9 = c(1, 0, 2),
node10 = c(0, 1, 3)))
colnames(ARD) = c("A", "B", "C")
ARD
ARD %>%
kbl(caption="How Many Do You Know in Each Group?",
format= "html",
col.names = c("A","B","C"),
align="r") %>%
kable_classic(full_width = F, html_font = "helvetica")
runApp('viz_shiny.R')
